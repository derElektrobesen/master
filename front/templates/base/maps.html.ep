% layout 'index';

%= javascript begin
ymaps.ready(init);
var map, placemarks, clusterer, companies;

function init(){
    placemarks = {
% my %companies;
% for my $item (@$geoobjects) {
%   next unless $item->{coordinates};
%   my @coords = split /\s+/, $item->{coordinates};
%   my $content = $item->{name};
%   $companies{$item->{id}} = "[$item->{company_id},$item->{district}]";
    '<%= $item->{id} %>':new ymaps.Placemark([<%= join ',', reverse @coords %>],{balloonContent:'<%= $content %>'},{preset:'islands#icon',iconColor:'<%= $item->{color} %>'}),
% }
    };
    companies = {<%= join ',', map { "$_:$companies{$_}" } keys %companies %>};

    for (var item in placemarks) {
        placemarks[item].events.add('balloonopen', function (i) { return function (e) { on_baloon_open(i); } }(item));
    }

    set_placemarks(placemarks);

}

function set_placemarks(placemarks_list) {
    var latitude = 0,
        longitude = 0,
        count = 0;

    for (var item in placemarks_list) {
        var coord = placemarks_list[item].geometry.getCoordinates();
        latitude += coord[0];
        longitude += coord[1];
        count++;
    }

    if (map)
        map.destroy();
    map = new ymaps.Map("map", {
        center: [latitude / count, longitude / count],
        zoom: 9,
        behaviors: ['default', 'scrollZoom'],
        controls: ["zoomControl"],
    });

    clusterer = new ymaps.Clusterer({
        preset: 'islands#invertedVioletClusterIcons',
        gridSize: 50,
        groupByCoordinates: false,
        clusterDisableClickZoom: false,
        clusterHideIconOnBalloonOpen: false,
        geoObjectHideIconOnBalloonOpen: false
    });

    for (var item in placemarks_list) {
        clusterer.add(placemarks_list[item]);
    }

    map.geoObjects.add(clusterer);
    map.setBounds(clusterer.getBounds(), {
        checkZoomRange: true,
        zoomMargin: 30,
    });
}

function change_baloon(id) {
    var placemark = placemarks[id];
    if (!placemark)
        return;

    map.setCenter(placemark.geometry.getBounds()[0], 15, {
        checkZoomRange: true,
        callback: function() {
            placemark[id].events.add('mapchange', function(e) {
                // point found
                if (e.get('newMap') != null) {
                    // point loaded
                    setTimeout(function() {
                        placemark.balloon.open();
                    }, 300);
                }
            });
        }
    });
}

var last_baloon;
function on_baloon_open(baloon_id, need_change_pos) {
    if (last_baloon == baloon_id)
        return;

    last_baloon = baloon_id;

    var district_id = $("#regions :selected").attr('district_id'),
        company_id = $("#companies").val();
    $.when(
        $.get('/cgi-bin/company?obj_id=' + baloon_id),
        $.ajax({
            url: 'http://<%= $files_url %>/files', // FIXME: remove hardcoded 'http'
            data: {
                company: companies[baloon_id][0],
                district: companies[baloon_id][1],
            },
            xhrFields: {
                withCredentials: true,
            },
        })
    ).done(function (data, files) {
        if (!data)
            return;

        if (!files)
            files = {};
        else
            files = files[0];
        data = data[0];

        var $baloon_info = $("#baloon-info"),
            $addr = $baloon_info.find("#baloon-addr"),
            $info = $baloon_info.find("#baloon-info-parts"),
            pos_changed = false;

        $info.html('');
        $addr.html($("<b>").text(data.company).html()); // not works =(

        var first = $("<div>"), second = $("<div>");
        for (var i = 0; i < data.count; ++i) {
            var b = data.buildings[i],
                info_impl = $("<span>",{
                    class: 'address-meta',
                }).text(" (Тип: " + b.type +
                        "; Нагрузка: " + b.heat_load +
                        "; Cтоимость: " + b.cost +
                        (b.build_date ? "; Дата ввода в экспл: " + b.build_date : "") +
                        (b.reconstruction_date ? "; Дата кап. ремонта: " + b.reconstruction_date : "") +
                        ")"),
                building_info = info_impl;
            $("<br>").appendTo(building_info);
            if (b.is_primary == '1') {
                var container = $("<a>", {
                    href: '#',
                    click: function (id) {
                        return function () {
                            change_baloon(id);
                            return false;
                        }
                    }(b.id),
                });
                if (need_change_pos && !pos_changed) {
                    pos_changed = true;
                    change_baloon(b.id);
                }
                container.text(b.addr).appendTo(first);
                building_info.appendTo(first);
            } else {
                var container = $("<span>");
                container.text(b.addr).appendTo($info);
                container.appendTo(second);
                building_info.appendTo(second);
            }
        }

        first.appendTo($info);
        second.appendTo($info);
        $("<br>").appendTo($info);
        $("<h3 class='title-center'>Документация</h3>").appendTo($info);

        // generating files list
        var container_wrapper = $("<div>", {
            id: 'content-l',
            class: 'content-scroll',
        });
        var container = $("<ul>", {
            class: 'box-vert-scroll',
        });

        for (var i = 0; i < files.count; ++i) {
            var container_li = $("<li>");
            $("<a>", {
                href: files.files[i].url,
            }).text(files.files[i].name + " (" + (files.files[i].size / 1024 / 1024).toFixed(2) + " Мб)").appendTo(container_li);
            container_li.appendTo(container);
        }
        container.appendTo(container_wrapper);
        container_wrapper.appendTo($info);
        $baloon_info.show();
        $("#content-l").mCustomScrollbar();
    });
}

function on_filter_type_changed(e) {
    ['cost', 'type', 'repair'].map(function (t) {
        $("#filter-" + t + "-container").hide();
    });

    if (e.target.value == 'none') {
        if ($("#companies").val() == -1)
            set_placemarks(placemarks);
        return;
    }

    var $container = $("#filter-" + e.target.value + "-container");
    $container.show();
}

function do_filter(type, args) {
    $.get("/cgi-bin/objects/filter?type=" + type + "&" + $.param(args), function (data) {
        if (!data || data.error) {
            if (data)
                console.log("ERROR: " + data.error);
            return;
        }

        if (data.count == 0)
            return;

        var placemarks_list = {};
        for (var i = 0; i < data.count; ++i) {
            if (placemarks[data.data[i].id]) {
                placemarks_list[data.data[i].id] = placemarks[data.data[i].id];
            }
        }

        set_placemarks(placemarks_list);
        $("#baloon-addr").html('');
        $("#baloon-info-parts").html('');
        if (type != 'company')
            $("#companies").val('-1').trigger('refresh');
    });
}

function on_company_changed(e) {
    if (e.target.value == -1) {
        set_placemarks(placemarks);
        return;
    }

    do_filter("company", { company: e.target.value });
}

function do_filter_cost() {
    var start = $("#filter-cost-start").val(),
        end = $("#filter-cost-end").val(),
        args = {
            start: start,
            end: end,
        };

    if (start == "" && end == "")
        set_placemarks(placemarks);
    else
        do_filter("cost", args);
}

function do_filter_type() {
    var to_request = [];

    $('#filter-type-container input:checkbox').map(function () {
        if (this.checked)
            to_request.push(this.value);
    });

    if (to_request.length == 0)
        set_placemarks(placemarks);
    else
        do_filter("type", { types: to_request.join(',') });
}

function do_filter_repair() {
    var start = $("#filter-repair-start").val(),
        end = $("#filter-repair-end").val(),
        args = {
            start: start,
            end: end,
        };

    if (start == "" && end == "")
        set_placemarks(placemarks);
    else
        do_filter("repair", args);
}
% end

<!-- report-request-form -->
<div class="report-request-form">
    <h3>Организации на карте</h3>
    <form>
      <!--  -->
      <label for="region">Регион</label>
      <div>
% my $i = 0; my $current = "Москва";
% my %regions = map { $_->{region} => $_->{id} } @{$districts->{districts}};
        <select name="region" id="regions">
          <option>Выберете регион</option>
% for (sort keys %regions) {
          <option value="<%= $_ %>" district_id="<%= $regions{$_} %>" <%= $_ eq $current ? "selected" : "" %>><%= $_ %></option>
% }
        </select>
      </div>
      <!-- / -->
      <!--  -->
      <label for="organization">Организация</label>
      <div>
        <select name="organization" id="companies">
          <option value="-1" selected>Выберете организацию</option>
% for my $company (@$companies) {
          <option value="<%= $company->{id} %>"><%= $company->{name} %></option>
% }
        </select>
      </div>
      <!-- / -->
    </form>
    <div id="map" class="report-map"></div>
    <div class="tab-content"> 
	<h2 class="title-center1">Фильтр</h2>
    <form>
      <!--  -->
      <div>
        <select name="filter-type" id="filter-types">
          <option value="none" selected>Без фильтрации</option>
          <option value="cost">Фильтр по стоимости</option>
          <option value="type">Фильтр по типу учреждения</option>
          <option value="repair">Фильтр по дате кап ремонта</option>
        </select>
      </div>
      <!-- / -->

      <div id="filter-cost-container" style="display: none;" class="box ">
          <p>Стоимость:</p>
          <label for="inp-filter-cost-start">От</label>
          <input type="text" name="inp-filter-cost-start" id="filter-cost-start"><br>
          <label for="inp-filter-cost-end">До</label>
          <input type="text" name="inp-filter-cost-end" id="filter-cost-end"><br>
          <input type="button" name="do-filter-cost" value="Фильтровать" onclick="do_filter_cost()">
      </div>

      <div id="filter-type-container" style="display: none;" class="box ">
          <ul>
% for my $c (@$colors_list) {
%     next if $c->{t} eq 'unknown';
              <li>
                  <span style="background-color: <%= $c->{c} %>"></span>
                  <input type="checkbox" name="filter-type" value="<%= $c->{t} %>">
                  <label for="checkbox"><%= $c->{t} %></label>
              </li>
% }
          </ul>

          <input type="button" name="do-filter-type" value="Фильтровать" onclick="do_filter_type()">
      </div>

      <div id="filter-repair-container" style="display: none;" class="box ">
          <p>Год проведения капитального ремонта:</p>
          <label for="inp-filter-repair-start">От</label>
          <input type="text" name="inp-filter-repair-start" id="filter-repair-start"><br>
          <label for="inp-filter-repair-end">До</label>
          <input type="text" name="inp-filter-repair-end" id="filter-repair-end"><br>
          <input type="button" name="do-filter-repair" value="Фильтровать" onclick="do_filter_repair()">
      </div>
    </form>
	</div>
</div>

<div class="table-1" id="baloon-info" style="display: none;">
    <p id="baloon-addr"></p>
    <div id="baloon-info-parts"></div>
</div>

<script src="/js/functions.js"></script>
<script src="/js/jquery.mCustomScrollbar.concat.min.js"></script>
%= javascript begin
    var elements = ['regions', 'companies'];
    select_change_controller(elements, '', undefined, function (args) { args.heads_only = 1; return args; });

    $("#companies").on('change', on_company_changed);
    $("#filter-types").on('change', on_filter_type_changed);
% end

